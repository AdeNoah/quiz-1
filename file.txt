
questionBank = [
    {
        question: 'The this keyword always refers to the global object.',
        option1: 'True',
        option2: 'False',
        answer: option2
    },
    {
        question: 'The parseInt function can convert a string to an integer.',
        option1: 'True',
        option2: 'False',
        answer: option1
    },
    {
        question: 'In JavaScript, arrays are objects',
        option1: 'True',
        option2: 'False',
        answer: option1
    },
    {
        question: 'The push method can be used to add elements to the end of an array.',
        option1: 'True',
        option2: 'False',
        answer: option1
    },
    {
        question: 'The == operator performs type coercion before comparing values.',
        option1: 'True',
        option2: 'False',
        answer: option1
    },
    {
        question: 'Question: What is the output of the following code? console.log(10 + "5");',
        option1: 15,
        option2: 105,
        option3: '15',
        option4: '105',
        answer: option2
    },
    {
        question: 'Question: What does the typeof operator return for the value null? console.log(typeof null)',
        option1: 'null',
        option2: 'undefined',
        option3: 'object',
        option4: 'string',
        answer: option3
    },
    {
        question: 'Question: What is the correct syntax to add an event listener to a button with the ID myButton?',
        option1: 'document.getElementById("myButton").addEventListener(click, function() { ... });',
        option2: 'document.getElementById("myButton").addEventListener("click", function() { ... });',
        option3: 'document.getElementById("myButton").addEvent(click, function() { ... });',
        answer: option2
    },
    {
        question: 'Question: What will the following code print?        var x = 10; function test(){var x = 20;    console.log(x);}    test();',
        option1: 10,
        option2: 20,
        option3: 'undefined',
        option4: 'null',
        answer: option2
    },
    {
        question: 'Question: What is the output of the following code?      var arr = [1, 2, 3, 4, 5];  console.log(arr.slice(1, 3));',
        option1: [1, 2],
        option2: [2, 3],
        option3: [3, 4],
        option4: [1, 2, 3],
        answer: option2
    }
];




i need to start the quiz, display the questions, remove the button, accept answer, crosscheck if the answer is correct and save a it as the score else show the mark thecorrect answer, next ensure i can move to the next or previous question, also ensure that i can submit the quiz when i am done so i could get my results, finally print out or display the result of the test taker. simple enough hopefully...


for the javascript, there are a few steps i will like to highlight, they are:


1. make a generateQuestions functions and call it in a startQuiz function then add an eventListener to the Start Quiz button. the startQuiz function is going to run the generateQuestions function and then disable the button and remove it from the dom.

2. next is to make a chooseAnswer function to be able to select the correct answer. if the correct answer is chosen, it records it as score and increases with eash correct question. if the question is wrong, flag both the selected answer and the correct one for review.

3. create a loadNext function and a loadPrevious function and hook them via eventListener to next and previous buttons respectively, this will allow to go through the questions efficiently 

4. create a submit button to finally add everything up and give a result of the just taken quiz. here we get the list of questions, their answers the ones we got wrong, the summary of the quiz/result and there will also be a restart button to restart the quiz.








answerElement.innerHTML = '';
for(let key in currentQuestion) {
    if(key.startsWith('option')) {
        const input = document.createElement('input');
        input.type = 'radio';
        input.name = 'options';
        input.id = 'key' ;
        input.value = key;

        const label = document.createElement('label')
        label.setAttribute('for', key);
        label.innerText = currentQuestion[key];
        answerElement.appendChild(input);
        answerElement.appendChild(label);
    }
}
